token: "xxxxxxxxxxxxxxxx" # Lichess OAuth2 Token. Do not edit.
url: "https://lichess.org/"

engine:
  dir: "./engines/"
  name: "honeybadger"
  working_dir: ""
  protocol: "uci"
  ponder: false # Think on opponent's time.
  polyglot:
    enabled: false
  draw_or_resign: # TODO
    resign_enabled: false
    resign_score: -1000      # If the score is less than or equal to this value, the bot resigns (in cp).
    resign_for_egtb_minus_two: true # If true the bot will resign in positions where the online_egtb returns a wdl of -2.
    resign_moves: 3          # How many moves in a row the score has to be below the resign value.
    offer_draw_enabled: false
    offer_draw_score: 0      # If the absolute value of the score is less than or equal to this value, the bot offers/accepts draw (in cp).
    offer_draw_for_egtb_zero: true # If true the bot will offer/accept draw in positions where the online_egtb returns a wdl of 0.
    offer_draw_moves: 5      # How many moves in a row the absolute value of the score has to be below the draw value.
    offer_draw_pieces: 10    # Only if the pieces on board are less than or equal to this value, the bot offers/accepts draw.
  online_moves:
    max_out_of_book_moves: 0
    chessdb_book:
      enabled: false
    lichess_cloud_analysis:
      enabled: false
    online_egtb:
      enabled: false
  lichess_bot_tbs:
    syzygy:
      enabled: false
    gaviota:
      enabled: false
  uci_options:
    SearchStrategy: AlphaBeta
    EvaluationStrategy: Pesto
    OracleStrategy: Order
    QuiescenceStrategy: AlphaBeta
    TranspositionStrategy: Ristretto
    OpeningStrategy: WeightedRandom
    Hash: 256
#   go_commands:             # Additional options to pass to the UCI go command.
#     nodes: 1               # Search so many nodes only.
#     depth: 5               # Search depth ply only.
#     movetime: 1000         # Integer. Search exactly movetime milliseconds.
  silence_stderr: false

abort_time: 20               # Time to abort a game in seconds when there is no activity.
fake_think_time: false
rate_limiting_delay: 0
move_overhead: 2000          # Increase if your bot flags games too often.

challenge:
  concurrency: 1
  sort_by: "best"
  accept_bot: false          # Accepts challenges coming from other bots.
  only_bot: false            # Accept challenges by bots only.
  max_increment: 180         # Maximum amount of increment to accept a challenge. The max is 180. Set to 0 for no increment.
  min_increment: 0           # Minimum amount of increment to accept a challenge.
  max_base: 315360000        # Maximum amount of base time to accept a challenge. The max is 315360000 (10 years).
  min_base: 0                # Minimum amount of base time to accept a challenge.
  variants:
    - standard
  time_controls:
    - bullet
    - blitz
    - rapid
    - classical
  modes:
    - casual
    - rated

greeting:
  # Optional substitution keywords (include curly braces):
  #   {opponent} to insert opponent's name
  #   {me} to insert bot's name
  # Any other words in curly braces will be removed.
  hello: "Hi! I'm {me}. Good luck! Type !help for a list of commands I can respond to." # Message to send to opponent chat at the start of a game
  goodbye: "Good game!" # Message to send to opponent chat at the end of a game
  hello_spectators: "Hi! I'm {me}. Type !help for a list of commands I can respond to." # Message to send to spectator chat at the start of a game
  goodbye_spectators: "Thanks for watching!" # Message to send to spectator chat at the end of a game

pgn_directory: "game_records"

matchmaking:
  allow_matchmaking: false    # Set it to 'true' to challenge other bots.
  challenge_variant: "random"
  challenge_timeout: 30
  challenge_initial_time:     # Initial time in seconds of the challenge (to be chosen at random).
    - 60
    - 120
  challenge_increment:        # Increment in seconds of the challenge (to be chosen at random).
    - 1
    - 2
# opponent_min_rating: 600    # min 600
# opponent_max_rating: 4000   # max 4000
  opponent_rating_difference: 100 # The maximum difference in rating between the bot's rating and opponent's rating.
  opponent_allow_tos_violation: false
  challenge_mode: "random"
